{"name":"ADSD VestibulumSensorem Mark - I","tagline":"Proyecto Final ADSD  2013-II con Sensores Ambientales","body":"### Conociendo la Terminal.\r\n=== Primeros  Comandos ... creando un directorio ===\r\nPrimero, al abrir la terminal tendremos una ventana del siguente estilo:\r\n\r\n <center>[[File:BashCapture.png|500px]]</center>\r\n\r\nDonde comenzaremos a escribir comandos y familiarizarnos con la consola para trabajar así la beaglebone Black.El primer comando que vamos a utilizar una ves tengamos la BeagleBone Black Conectada a la PC vía USB es :\r\n     $cd ~\r\nLo que nos ubicara en el directorio Home , para comprobar que ha funcionado utilizamos el comando ls ( para  ver los archivos )\r\n     $ls \r\nSi todo ha funcionado bien, deberíamos tener una lista de carpetas  y archivos en la terminal con nombres como :\r\n\r\n*Documents ( o Documentos si esta en español) \r\n\r\n*Music( o Musica  si esta en español)\r\n\r\n*Download (o Descargas si esta en español)\r\n\r\n<center>[[File:lsCapture.png|500px]]</center>\r\n\r\nSobre este directorio vamos a ubicar una carpeta para trabajar los archivos fuentes que necesitemos  ( carpeta de trabajo) o si se requiere trabajar en equipo de una forma mas profesional vamos a utilizar un Git  ( alojado en Github.com ) que mas adelante se explicara  en detalle, por ahora es importante organizar nuestro espacio de trabajo.\r\n\r\nPara escoger un directorio de trabajo utilizamos el comando \"cd\" que vimos anteriormente pero esta vez nos vamos a mover a una carpeta / directorio diferente a HOME , por ejemplo a Documents :\r\n\r\n     $cd Documents/\r\n\r\nTIP: La terminal de Linux tiene una función muy útil y es auto completar las palabras , es decir que si estamos en la carpeta HOME y escribimos cd /Do   y luego la tecla tab (OJO SIN DAR ENTER) y la terminal completara la palabra que estábamos escribiendo, es decir Documents.\r\n\r\nPara crear nuestro directorio de trabajo simplemente utilizamos el comando mkdir :\r\n\r\n     $mkdir WorkFolder \r\n\r\nY se creara en /Documents una carpeta llamada WorkFolder en la cual vamos a trabajar , para acceder a esta carpeta simplemente usamos cd para ingresar\r\n\r\n    $cd WorkFolder\r\n\r\ny ya estamos dentro del directorio para crear documentos y todo lo que necesitemos para programar la BeagleBone Black.\r\n\r\n<center>[[File:mkdirCapture.png|500px]]</center>\r\n\r\n=== Primeros Comandos ... creando un Repositorio Git ===\r\n\r\nMuchas veces al trabajar código en grupo, o incluso solo para tener un mejor control de las versiones se recomienda el uso de un repositorio como un Git.A diferencia de Dropbox, permite un control mas complejo y sofisticado de los archivos manejados, y gracias a que esta orientado a codigo tiene herramientas para compara lineas donde han habido cambios, hacer comentarios , etc.\r\n\r\n¿Que es GIT?\r\n\r\nGit es un software de control de versiones de proyectos. Fue desarrollado por Linus Torvalds (el creador de Linux) pensando en una forma de controlar proyectos de programadores en conjunto y como facilitar el trabajo a distancia.\r\n\r\n¿Que es GIThub?\r\n\r\nGIThub es un entorno social y amigable para el uso de control git. En esta pagina se pueden hacer comentarios, seguir personas, agregar \"amigos\" y muchas otras funciones de las redes sociales, pero enfocado al desarrollo de software. Esta disponible para linux, mac y windows.\r\n\r\n¿Como comenzar?\r\n\r\nPrimero, hay que tener una cuenta en github, para ello solo se necesita registrarse y listo.(los pasos se enumeran con [.])\r\n\r\n<center>[[File:githubCapture.png|500px]]</center>\r\n\r\n[1] https://github.com/\r\n\r\n[2] Crear cuenta:\r\n\r\n        [2.1]Pick a username (selecciona un nombre de usuario)\r\n\r\n        [2.2]your email (Asocia un email)\r\n\r\n        [2.3]Create a password (crea una contraseña, github exige que tenga al menos un numero)\r\n\r\n        [2.4] Sing Up for GitHub (dale click)\r\n\r\n\r\nUna vez se tiene la cuenta en github (usando linux) se puede ser parte de un proyecto o crear uno propio desde el comienzo.Las instrucciones [3] son para la creación de un proyecto nuevo (repositorio) y las instrucciones [4] son para unirse a un proyecto ya existente.\r\n\r\n[3] En la pestaña Repositories ( Contributions, Repositories,Public Activity) se encuentran los repositorios ya creados, para crear uno nuevo, nos dirigimos a NEW( all,public,source,forks, mirrors, New).\r\n\r\nDespués de darle click a new, aparecerá una nueva interfaz para escoger el creador el nombre del repositorio (owner /Repository name).Tambien es importante poner una descripción del repositorio y si el repositorio es de carácter publico o privado (para privado toca pagar ).\r\n\r\nLuego (para evitar muchas lineas de código y sufrir después ) es indispensable darle check al cuadro de INITIALIZE THIS REPOSITORY WITH A README y escoger add.gitignore (C,java,pyhton,etc) y un archivo de licencia (GPL :libre libre,Apache:guarda patentes ...).\r\n \r\nListo, ya esta el repositorio creado, podemos ir a nuestro usuario en la esquina superior derecha y ver nuestro usuario una hojita con un +, un destornillador con una llave inglesa y un logo de salir.\r\n\r\nAhora saldrá en nuestra pestaña de Repositories el nuevo Repo que acabamos de crear.\r\n\r\n[4]Buscamos la persona dueña del repositorio ( puede ser nosotros mismos) y entramos al repo.\r\n\r\n [4.1]Nos aparecerá en la parte superior el nombre del usuario seguido de una slash / y el nombre del repositorio. Abajo la descripción de repositorio y mas abajo el numero de commits hechos, el numero de branchs, el numero de releases y contributors.\r\n\r\n [4.2]Debajo de estas estadísticas del git, vemos los archivos dentro del repositorios ( y las carpetas también) con el usuario que realizo la ultima modificación y a que horas.\r\n\r\n [4.3] Por ultimo se vera el README del proyecto.\r\n\r\n [4.4]Si nos dirigimos a la parte derecha de la pantalla vemos <>Code con información e issues, PUll requests, wiki, pulse, graphs, network, settings y por ultimo y mas importante el HTTP del git.\r\n\r\n [4.5]El http del git ( no el del navegador que estaremos viendo en ese momento ) Https clone URL es la información con la cual sincronizaremos nuestra PC con el git ( asi como dropbox). Asi que copiamos esta dirección que sale en HTTPS CLONE URL.\r\n\r\n[4.6]Nos dirigimos a nuestra carpeta en linux que queramos usar para trabajar en el proyecto, y desde la terminal usando comandos cd llegamos a ese directorio. Una vez dentro, usamos el comando :\r\n\r\n      $git clone \"urldelrepositorio.git\"\r\n\r\n\r\n<center>[[File:gitcloneCapture.png|500px]]</center>\r\n\r\nEl link se cambiara según el repositorio que se necesite.\r\n\r\nEste comando git clone descargara a su computador todo el contenido del git y genera un link (indirecto ) con git.\r\n\r\n[4.7] Una vez creada la carpeta del git, trabajamos sobre el proyecto, y a diferencia de Dropbox, este no se actualiza automáticamente, tenemos que darle una serie de comandos para subir los cambios.\r\n\r\n[4.8] Los comandos para subir cambios son los siguientes ; lo que este entre %% es para cambiar:\r\n \r\n\r\n       $git add nombre del archivo\r\n\r\no si se desea toda la carpeta seria git add *\r\n\r\n       $git commit -m \"Mensaje de los cambios hechos\"\r\n\r\n       $git push\r\n\r\ndonde si todo salio bien deberíamos tener la siguiente imagen en la consola:\r\n\r\n<center>[[File:gitpushCapture.png|500px]]</center>\r\n\r\n y listo , si revisamos la pagina de git en internet estará actualizada con la nueva información.\r\n\r\n=== Primeros Comandos ... Conectando la BeagleBone Black a la PC ===\r\n\r\n==== Realizar PING entre la BeagleBone Black y la PC====\r\n\r\nUna vez conectada la BeagleBone Black vía USB al computador abrimos la terminal para verificar la conexión de la BeagleBone Black vamos a utilizar el siguiente comando:\r\n\r\n     $ping 192.168.7.2\r\n\r\nEste comando establece una conexión de números aleatorios entre la PC y la tarjeta y así se verifica si se esta enviando y recibiendo la información adecuadamente.La consola comenzara a enviar datos aleatorios con el siguiente formato :\r\n\r\n<center>[[File:pingCapture.png|400px]]</center>\r\n\r\n==== Conectar la BeagleBone Black mediante SSH====\r\n\r\nUna vez confirmada la conexión de la BeagleBone usando el comando $ping podemos intentar conectarnos usando el comando en la consola :\r\n\r\n    $ssh -X root@192.168.7.2\r\n\r\ndonde el numero 192.168.7.2 es la dirección por default de todas las BeagleBone Black, y el fragmento del comando \"-X\" realiza una conexión entre el entorno gráfico de Ubuntu y el sistema operativo de la BeagleBone y así poder acceder a las aplicaciones con entorno gráfico como Gedit y Firefox.\r\n\r\n<center>[[File:sshCapture.png|400px]]</center>\r\n\r\ny para salir de la BeagleBone y retomar el control sobre la consola podemos utilizar el siguiente comando:\r\n\r\n   $exit\r\n\r\n<center>[[File:exitCapture.png|400px]]</center>\r\n\r\n==== Entorno de Programación ====\r\n\r\nLa tarjeta de desarrollo viene con un servidor web basado en html que contiene un extenso tutorial , librerías para BoneScript (el lenguaje de programación de la Beagle, aunque también  se puede programar en C, java, C++, etc.Para acceder a estos manuales y guias es necesario abrir en firefox/Chrome la siguente dirección :\r\n\r\n     http://192.168.7.2\r\n\r\n<center>[[File:beaglehtml.png|400px]]</center>\r\n\r\nEn este portal existen varios tutoriales y ejemplos para comenzar a utilizar la BeagleBone Black usando BoneScript.Para comenzar a probar la BeagleBone vamos a analizar el primer ejemplo que encontramos en el portal:\r\n\r\n<center>[[File:ledstest.png|400px]]</center>\r\n\r\nEn este ejemplo se encienden los LEDS USR que habíamos caracterizado anteriormente. En el codigo se utiliza gracias a BoneScript ya existen múltiples funciones para utilizar los periféricos (Hardware)\r\ncomo por ejemplo la función pinMode() que define si el pin es de salida o de entrada.\r\ndigitalWrite() que permite escribir una señal lógica ( 1 lógico = 3.3v) y usando la funcion se setTimeout se puede mantener el estado de los leds antes de que el código termine y se apaguen los leds.\r\nPara probar este ejemplo solo basta seleccionar \"run\" .\r\n\r\n<center>[[File:LEDStest.png|400px]]</center>\r\n\r\nLa BeagleBone viene con un entorno de desarrollo para programar en BoneScript,C,java,etc. Llamado Cloud9 al cual se puede acceder mediante Firefox ingresando la siguente url:\r\n\r\n     http://192.168.7.2:3000/\r\n\r\n<center>[[File:cloud9.png|400px]]</center>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}